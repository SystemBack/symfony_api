version: '3.5'

services:
  api-web:
    container_name: api-web
    build:
      context: ./docker/nginx
      args:
        UID: $U_ID
    ports:
      - 8080:80
    volumes:
      - ./public:/appdata/www/public
    depends_on:
      - api-php
    networks:
      - api-network

  api-php:
    container_name: api-php
    build:
      context: ./docker/php
      args:
        UID: $U_ID
    environment:
      XDEBUG_CLIENT_HOST: 172.20.0.1
      XDEBUG_CLIENT_PORT: 9003
      PHP_IDE_CONFIG: serverName=Docker
    volumes:
      - ./:/appdata/www
      - ./docker/php/xdebug-linux.ini:/usr/local/etc/php/conf.d/xdebug.ini
      #- ./docker/php/xdebug-macos.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ~/.ssh/id_rsa/:/home/appuser/.ssh/id_rsa
    depends_on:
      - api-db
    networks:
      - api-network

  api-db:
    container_name: api-db
    image: mysql:8.0
    ports:
      - 3500:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: mysqld --sql_mode="STRICT_ALL_TABLES,NO_ENGINE_SUBSTITUTION"
    volumes:
      - api-db-data:/var/lib/mysql
    networks:
      - api-network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:

###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
  api-db-data:

networks:
  api-network:
    external: true